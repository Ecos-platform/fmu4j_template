# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: build-test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        run: |
          ./gradlew build fmu4j
          ls build/fmus
      - name: save fmu
        uses: actions/upload-artifact@v2
        with:
          name: fmus
          path: build/fmus
          
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2

      - name: Download python package
        uses: actions/download-artifact@v1
        with:
          name: fmus
          
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
                          
      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
          
      - name:  set enviroment windows
        run:   |
               if [ "$RUNNER_OS" == "Windows" ]; then
                    echo "$JAVA_HOME/jre/bin/server" >> $GITHUB_PATH
               fi
               cat $GITHUB_PATH"
               echo "Path: $PATH"
        shell: bash
      
      - name: Run the Tests
        shell: bash
        run: |
          echo "JavaHome: $JAVA_HOME"
          echo "Path: $PATH"
          echo "Runner: $RUNNER_OS"
          echo "$JAVA_HOME/jre/bin/server" >> $GITHUB_PATH
          echo "GITHUB_PATH: $GITHUB_PATH"
          cat $GITHUB_PATH"
          if [ "$RUNNER_OS" == "Linux" ]; then
            export LD_LIBRARY_PATH="$JAVA_HOME/jre/lib/amd64/server:${LD_LIBRARY_PATH}"
          fi

          echo "Path: $PATH"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
          # Install  dependencies
          python -m pip install fmpy
          mkdir -p build/fmus && cp fmus/JavaSlave.fmu build/fmus
          cd test
          python test-fmu.py
        
